#教程来源： https://www.liaoxuefeng.com/wiki/896043488029600

#创建及提交
git init                                    创建版本库
git add <file>                              添加文件到暂存区(Stage)
git add .                                   添加版本库下所有文件
git commit -m <message>                     提交添加的文件到工作区
git status                                  查看版本库当前状态
git diff <file>                             查看文件修改内容
#版本切换
git log                                     显示从最近到最远的提交日志
git log --pretty=oneline                    显示提交日志的版本号和备注
git reset --hard HEAD^                      回退到上一版本(上上版本HEAD^^)
git reset --hard <commit_id>                回退到对应版本号(版本号写前几位即可)
git reflog                                  显示历史命令记录(找回版本)
#撤销修改
git checkout -- <file>                      将本地文件回滚到最近一次add或commit的状态
git reset HEAD <file>                       把暂存区的修改撤销掉(unstage)重新放回工作区
git rm <file>                               删除文件然后commit才能从工作区删除，不要手工删除
#远程仓库
git remote add origin <github仓库地址>      本地仓库与github仓库关联
git push -u origin master                   第一次推送所有内容到远程github仓库
git push origin master                      推送最新修改内容到远程github仓库
git clone <github仓库地址>                  从github仓库克隆一个本地库
#分支管理
git branch                                  查看分支
git branch <name>                           创建分支
git switch <name>                           切换分支
git switch -c <name>                        创建+切换分支
git merge <name>                            合并某分支到当前分支
git branch -d <name>                        删除分支
git branch -D <name>                        强行删除分支
git log --graph                             查看分支合并的情况
git merge --no-ff -m <message> <name>       强制禁用Fast forward模式合并分支
#BUG分支
git stash                                   把当前工作现场"储藏"起来
git stash list                              查看"储藏"的工作现场
git stash apply                             恢复"储藏"的工作现场
git stash drop                              删除"储藏"的工作现场
git cherry-pick <commit_id>                 将版本号对应提交的修改复制到当前分支
#多人协作
git remote -v                               查看远程库信息，没有推送权限则看不到push地址
git push origin <name>                      推送分支到远程库
git checkout -b dev origin/<name>           从远程库更新分支到本地
git pull                                    从远程库抓取最新代码合并
git rebase                                  把分叉的提交历史“整理”成一条直线
#标签管理
git tag <tagname>                           创建标签
git tag -a <tagname> -m <message>           指定标签信息
git tag                                     查看所有标签
git show <tagname>                          查看标签信息
git tag -d <tagname>                        删除标签
git push origin --tags                      推送所有标签到远程
git push origin <tagname>                   推送某个标签到远程
git push origin :refs/tags/<tagname>        删除一个远程标签


