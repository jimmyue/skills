https://www.runoob.com/js/js-validation-api.html

一、Chrome 浏览器中执行 JavaScript
1.Console 窗口调试 JavaScript 代码：开发者工具->Console(控制台)
2.Chrome snippets 小脚本：开发者工具->Sources(源代码)->Snippets(代码段)

二、JavaScript 输出数据
window.alert() ：弹出警告框。
document.write() ：方法将内容写到 HTML 文档中。
innerHTML ：写入到 HTML 元素。
console.log() ：写入到浏览器的控制台。

三、JavaScript 语句标识符
break ：用于跳出循环。
catch ：语句块，在 try 语句块执行出错时执行 catch 语句块。
continue ：跳过循环中的一个迭代。
do ... while ：执行一个语句块，在条件语句为 true 时继续执行该语句块。
for ：在条件语句为 true 时，可以将代码块执行指定的次数。
for ... in ：用于遍历数组或者对象的属性（对数组或者对象的属性进行循环操作）。
function ：定义一个函数
if ... else ：用于基于不同的条件来执行不同的动作。
return ：退出函数
switch ：用于基于不同的条件来执行不同的动作。
throw ：抛出（生成）错误 。
try ：实现错误处理，与 catch 一同使用。
var ：声明一个变量。
while ：当条件语句为 true 时，执行语句块。

四、常见的HTML事件:
onchange ：HTML元素改变。
onclick ：用户点击 HTML元素。
onmouseover ：鼠标指针移动到指定的元素上时发生。
onmouseout ：用户从一个 HTML元素上移开鼠标时发生。
onkeydown ：用户按下键盘按键。
onload ：浏览器已完成页面的加载。

五、约束验证HTML输入属性
disabled ：规定输入的元素不可用
max ：规定输入元素的最大值
min ：规定输入元素的最小值
pattern ：规定输入元素值的模式
required ：规定输入元素字段是必需的
type ：规定输入元素的类型

六、异常处理
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>菜鸟教程(runoob.com)</title>
</head>
<body>
<p>不管输入是否正确，输入框都会再输入后清空。</p>
<p>请输入 5 ~ 10 之间的数字：</p>
<input id="demo" type="text">
<button type="button" onclick="myFunction()">点我</button>
<p id="p01"></p>
<script>
function myFunction() {
  var message, x;
  message = document.getElementById("p01");
  message.innerHTML = "";
  x = document.getElementById("demo").value;
  try { 
    if(x == "") throw "值是空的";
    if(isNaN(x)) throw "值不是一个数字";
    x = Number(x);
    if(x > 10) throw "太大";
    if(x < 5) throw "太小";
  }
  catch(err) {
    message.innerHTML = "错误: " + err + ".";
  }
  finally {
    document.getElementById("demo").value = "";
  }
}
</script>
</body>
</html>


七、JavaScript 验证 API
1.约束验证 DOM 方法
checkValidity() ：input元素中的数据是合法的返回true，否则返回 false
setCustomValidity() ：设置input元素的 validationMessage 属性，用于自定义错误提示信息的方法
2.约束验证 DOM 属性
validity ：布尔属性值，返回input输入值是否合法
validationMessage ：浏览器错误提示信息
willValidate ：指定input是否需要验证
3.Validity属性
customError ：设置为true, 如果设置了自定义的 validity 信息。
patternMismatch ：设置为true, 如果元素的值不匹配它的模式属性。
rangeOverflow ：设置为true, 如果元素的值大于设置的最大值。
rangeUnderflow ：设置为true, 如果元素的值小于它的最小值。
stepMismatch ：设置为true, 如果元素的值不是按照规定的 step 属性设置。
tooLong ：设置为true, 如果元素的值超过了 maxLength 属性设置的长度。
typeMismatch ：设置为true, 如果元素的值不是预期相匹配的类型。
valueMissing ：设置为true，如果元素 (required 属性) 没有值。
valid ：设置为true，如果元素的值是合法的。


八、JavaScript this 关键字
在方法中，this 表示该方法所属的对象。
如果单独使用，this 表示全局对象。
在函数中，this 表示全局对象。
在函数中，在严格模式下，this 是未定义的(undefined)。
在事件中，this 表示接收事件的元素。
类似 call() 和 apply() 方法可以将 this 引用到任何对象
